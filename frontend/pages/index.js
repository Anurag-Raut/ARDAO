import { ConnectButton } from '@rainbow-me/rainbowkit';
import Link from 'next/link';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useAccount, useConnect, useDisconnect } from 'wagmi'
import { ToastContainer, toast } from 'react-toastify';
import { readContract,writeContract } from '@wagmi/core';
import { ethers } from "ethers";
import {
  CryptoDevsDAOABI,
  CryptoDevsDAOAddress,
  NFTMarketplaceABI,
  CryptoDevsNFTAddress,
  DAOTokenAddress,
  DAOTokenABI,
} from "../constants.js";
import {useEffect} from 'react';
const Home = () => {
  const {address,isConnected}=useAccount();
  
  console.log(NFTMarketplaceABI);
  async function reactContract(){
    const data = await readContract({
      address: '0x6E2B08A1083a645e4bbaba9F20fA7142650153Bb',
      abi: NFTMarketplaceABI.abi,
      functionName:'getPrice'
     
    })
    console.log(data);
  }
  useEffect(()=>{
    console.log(address);
    // reactContract();
    
  },[address]);

  async function BuyDaoToken(){


    const { hash } = await writeContract({
      address: DAOTokenAddress,
      abi: DAOTokenABI.abi,
      functionName: 'mint',
      value:ethers.parseEther('0.02'),
     
    })
    
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className={styles.title}>
          Welcome to DAO
          
        </h1>
        {/* <h1 className={styles.title}>Welcome to Crypto Devs!</h1>
          <div className={styles.description}>Welcome to the DAO!</div>
          <div className={styles.description}>
            Your CryptoDevs NFT Balance: {nftBalanceOfUser.data.toString()}
            <br />
            {daoBalance.data && (
              <>
                Treasury Balance:{" "}
                {formatEther(daoBalance.data.value).toString()} ETH
              </>
            )}
            <br />
            Total Number of Proposals: {numOfProposalsInDAO.data.toString()}
          </div> */}

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <Link className={styles.card} href="/createproposal">
            <h2>Create proposal &rarr;</h2>
            <p>Learn how to customize your wallet connection flow.</p>
          </Link>

          <div className={styles.card} onClick={BuyDaoToken}>
            <h2>Buy Dao Token &rarr;</h2>
            <p>Learn how to interact with Ethereum.</p>
          </div>

          <Link
            className={styles.card}
            href="/viewproposals"
          >
            <h2>View Proposals &rarr;</h2>
            <p>Discover boilerplate example RainbowKit projects.</p>
          </Link>

          
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
      <ToastContainer
position="top-right"
autoClose={5000}
hideProgressBar={false}
newestOnTop={false}
closeOnClick
rtl={false}
pauseOnFocusLoss
draggable
pauseOnHover
theme="light"
/>
    </div>
  );
};

export default Home;
